{"ast":null,"code":"var _jsxFileName = \"/Users/carolinaxu/Desktop/timedtask/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport Todo from \"./ToDo\";\nimport { TodoContext } from \"../data/ToDoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todos() {\n  _s();\n  const {\n    tasks,\n    removeTask,\n    setTasks\n  } = useContext(TodoContext);\n  const toggleClick = clickedTask => {\n    const updatedTasks = tasks.map(task => task.id === clickedTask.id ? {\n      ...task,\n      clicked: !task.clicked\n    } : task);\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n        task: task,\n        remove: removeTask,\n        toggleClick: toggleClick\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Todos, \"oBKjWeeyQCbHCcABEP4qx7skmGs=\");\n_c = Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","useContext","Todo","TodoContext","jsxDEV","_jsxDEV","Todos","_s","tasks","removeTask","setTasks","toggleClick","clickedTask","updatedTasks","map","task","id","clicked","children","remove","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carolinaxu/Desktop/timedtask/src/components/ToDoList.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport Todo from \"./ToDo\";\r\nimport { TodoContext } from \"../data/ToDoContext\";\r\n\r\nexport default function Todos() {\r\n  const { tasks, removeTask, setTasks } = useContext(TodoContext);\r\n\r\n  const toggleClick = (clickedTask) => {\r\n    const updatedTasks = tasks.map((task) =>\r\n      task.id === clickedTask.id ? { ...task, clicked: !task.clicked } : task\r\n    );\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <Todo\r\n            key={task.id}\r\n            task={task}\r\n            remove={removeTask}\r\n            toggleClick={toggleClick}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM;IAAEC,KAAK;IAAEC,UAAU;IAAEC;EAAS,CAAC,GAAGT,UAAU,CAACE,WAAW,CAAC;EAE/D,MAAMQ,WAAW,GAAIC,WAAW,IAAK;IACnC,MAAMC,YAAY,GAAGL,KAAK,CAACM,GAAG,CAAEC,IAAI,IAClCA,IAAI,CAACC,EAAE,KAAKJ,WAAW,CAACI,EAAE,GAAG;MAAE,GAAGD,IAAI;MAAEE,OAAO,EAAE,CAACF,IAAI,CAACE;IAAQ,CAAC,GAAGF,IACrE,CAAC;IACDL,QAAQ,CAACG,YAAY,CAAC;EACxB,CAAC;EAED,oBACER,OAAA;IAAAa,QAAA,eACEb,OAAA;MAAAa,QAAA,EACGV,KAAK,CAACM,GAAG,CAAEC,IAAI,iBACdV,OAAA,CAACH,IAAI;QAEHa,IAAI,EAAEA,IAAK;QACXI,MAAM,EAAEV,UAAW;QACnBE,WAAW,EAAEA;MAAY,GAHpBI,IAAI,CAACC,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAChB,EAAA,CAxBuBD,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}