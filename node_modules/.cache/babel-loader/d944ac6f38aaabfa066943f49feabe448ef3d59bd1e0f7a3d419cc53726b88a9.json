{"ast":null,"code":"var _jsxFileName = \"/Users/carolinaxu/Desktop/timedtask/src/components/ToDoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { TodoContext } from \"../data/ToDoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskForm() {\n  _s();\n  const {\n    tasks,\n    addTask,\n    updateTask,\n    editing,\n    setTasks\n  } = useContext(TodoContext);\n  const initialData = editing !== \"new\" ? tasks.find(task => task.id === editing) : {\n    title: \"\"\n  };\n  const [task, setTask] = useState(initialData);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (editing === \"new\") {\n      const newTask = {\n        ...task,\n        id: nanoid(),\n        complete: false,\n        startTime: new Date().toLocaleTimeString()\n      };\n      addTask(newTask);\n    } else {\n      updateTask(task);\n    }\n    setTask({\n      title: \"\"\n    });\n  };\n  const handleTitleChange = e => {\n    setTask({\n      ...task,\n      title: e.target.value\n    });\n  };\n  const toggleComplete = clickedTask => {\n    const updatedTasks = tasks.map(t => {\n      if (t.id === clickedTask.id) {\n        t.complete = !t.complete;\n        t.completionTime = t.complete ? new Date().toLocaleTimeString() : null;\n      }\n      return t;\n    });\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: handleTitleChange,\n            value: task.title,\n            className: \"task-input\",\n            placeholder: \"Add new task...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-btns\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-btn\",\n          type: \"submit\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"jw5SpRBC5OprMnNqN0cQBaQqQt0=\");\n_c = TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useContext","useState","nanoid","TodoContext","jsxDEV","_jsxDEV","TaskForm","_s","tasks","addTask","updateTask","editing","setTasks","initialData","find","task","id","title","setTask","handleSubmit","e","preventDefault","newTask","complete","startTime","Date","toLocaleTimeString","handleTitleChange","target","value","toggleComplete","clickedTask","updatedTasks","map","t","completionTime","className","children","onSubmit","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carolinaxu/Desktop/timedtask/src/components/ToDoForm.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { TodoContext } from \"../data/ToDoContext\";\r\n\r\nexport default function TaskForm() {\r\n  const { tasks, addTask, updateTask, editing, setTasks } = useContext(\r\n    TodoContext\r\n  );\r\n\r\n  const initialData =\r\n    editing !== \"new\"\r\n      ? tasks.find((task) => task.id === editing)\r\n      : { title: \"\" };\r\n\r\n  const [task, setTask] = useState(initialData);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (editing === \"new\") {\r\n      const newTask = {\r\n        ...task,\r\n        id: nanoid(),\r\n        complete: false,\r\n        startTime: new Date().toLocaleTimeString(),\r\n      };\r\n\r\n      addTask(newTask);\r\n    } else {\r\n      updateTask(task);\r\n    }\r\n\r\n    setTask({ title: \"\" });\r\n  };\r\n\r\n  const handleTitleChange = (e) => {\r\n    setTask({ ...task, title: e.target.value });\r\n  };\r\n\r\n  const toggleComplete = (clickedTask) => {\r\n    const updatedTasks = tasks.map((t) => {\r\n      if (t.id === clickedTask.id) {\r\n        t.complete = !t.complete;\r\n        t.completionTime = t.complete\r\n          ? new Date().toLocaleTimeString()\r\n          : null;\r\n      }\r\n      return t;\r\n    });\r\n\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              onChange={handleTitleChange}\r\n              value={task.title}\r\n              className=\"task-input\"\r\n              placeholder=\"Add new task...\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form-btns\">\r\n          <button className=\"add-btn\" type=\"submit\">\r\n            Add Task\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}